import globals from 'globals';
import importPlugin from 'eslint-plugin-import';
import unicorn from 'eslint-plugin-unicorn';
import stylistic from '@stylistic/eslint-plugin';
import node from 'eslint-plugin-n';

export default {
  languageOptions: {
    ecmaVersion: 'latest',
    globals: {
      ...globals.browser,
      ...globals.node,
    },
  },
  plugins: {
    import: importPlugin,
    style: stylistic,
    unicorn: unicorn,
    node: node,
  },
  rules: {
    'accessor-pairs': ['error', { enforceForClassMembers: true, setWithoutGet: true }],
    'array-callback-return': 'error',
    'arrow-parens': [
      'error',
      'as-needed',
      {
        requireForBlockBody: true,
      },
    ],
    'block-scoped-var': 'error',
    'capitalized-comments': 'off',
    'constructor-super': 'error',
    'curly': 'error',
    'dot-notation': ['error', { allowKeywords: true }],
    'eqeqeq': ['error', 'smart'],
    'no-array-constructor': 'error',
    'no-async-promise-executor': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-class-assign': 'error',
    'no-compare-neg-zero': 'error',
    'no-console': ['error', { allow: ['warn', 'error'] }],
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-boolean-cast': 'error',
    'no-fallthrough': 'error',
    'no-func-assign': 'error',
    'no-global-assign': 'error',
    'no-implied-eval': 'error',
    'no-import-assign': 'error',
    'no-invalid-regexp': 'error',
    'no-invalid-this': 'error',
    'no-irregular-whitespace': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-loss-of-precision': 'error',
    'no-misleading-character-class': 'error',
    'no-multi-str': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-symbol': 'error',
    'no-new-wrappers': 'error',
    'no-obj-calls': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-proto': 'error',
    'no-prototype-builtins': 'error',
    'no-redeclare': 'error',
    'no-regex-spaces': 'error',
    'no-tabs': 'error',
    'no-trailing-spaces': 'error',
    'no-restricted-properties': [ // taken from
      'error',
      { message: 'Use `Object.getPrototypeOf` or `Object.setPrototypeOf` instead.', property: '__proto__' },
      { message: 'Use `Object.defineProperty` instead.', property: '__defineGetter__' },
      { message: 'Use `Object.defineProperty` instead.', property: '__defineSetter__' },
      { message: 'Use `Object.getOwnPropertyDescriptor` instead.', property: '__lookupGetter__' },
      { message: 'Use `Object.getOwnPropertyDescriptor` instead.', property: '__lookupSetter__' },
    ],
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-this-before-super': 'error',
    'no-throw-literal': 'error',
    'no-undef': 'error',
    'no-undef-init': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unused-vars': 'error',
    'no-use-before-define': ['error', { classes: false, functions: false, variables: true }],
    'no-useless-assignment': 'error',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-var': 'error',
    'no-void': 'error',
    'no-with': 'error',
    'object-shorthand': ['error', 'consistent-as-needed'],
    'prefer-const': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'yoda': ['error', 'never'],

    // stylistic plugin
    'style/array-bracket-spacing': 'error',
    'style/arrow-spacing': 'error',
    'style/block-spacing': 'error',
    'style/comma-dangle': ['error', 'always-multiline'],
    'style/comma-spacing': 'error',
    'style/comma-style': 'error',
    'style/computed-property-spacing': 'error',
    'style/dot-location': 'error',
    'style/eol-last': 'error',
    'style/func-call-spacing': 'error',
    'style/function-paren-newline': 'error',
    'style/indent': [
      'error',
      2,
      {
        SwitchCase: 1,
      },
    ],
    'style/key-spacing': 'error',
    'style/keyword-spacing': 'error',
    'style/linebreak-style': 'error',
    'style/lines-between-class-members': 'error',
    'style/max-len': [
      'error',
      {
        code: 80,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreUrls: true,
        tabWidth: 2,
      },
    ],
    'style/max-statements-per-line': ['error', { max: 1 }],
    'style/multiline-ternary': ['error', 'always-multiline'],
    'style/new-parens': 'error',
    'style/no-confusing-arrow': 'error',
    'style/no-floating-decimal': 'error',
    'style/no-extra-semi': 'error',
    'style/no-mixed-operators': 'error',
    'style/no-mixed-spaces-and-tabs': 'error',
    'style/no-multi-spaces': 'error',
    'style/no-tabs': 'error',
    'style/no-trailing-spaces': 'error',
    'style/no-whitespace-before-property': 'error',
    'style/object-curly-spacing': ['error', 'always'],
    'style/operator-linebreak': ['error', 'before'],
    'style/quote-props': ['error', 'consistent-as-needed'],
    'style/quotes': ['error', 'single', { allowTemplateLiterals: true }],
    'style/semi': ['error', 'always'],
    'style/space-before-blocks': ['error', 'always'],
    'style/spaced-comment': [
      'error',
      'always',
      {
        markers: ['/'],
      },
    ],
    'style/template-curly-spacing': 'error',

    // import plugin
    'import/export': 'error',
    'import/first': 'error',
    'import/order': 'error', // based
    'import/no-cycle': 'error',
    'import/no-duplicates': 'error',
    'import/no-extraneous-dependencies': 'error',

    // unicorn plugin
    'unicorn/better-regex': 'error',
    'unicorn/catch-error-name': 'error',
    'unicorn/consistent-destructuring': 'error',
    'unicorn/consistent-function-scoping': 'error',
    'unicorn/custom-error-definition': 'error',
    'unicorn/empty-brace-spaces': 'error',
    'unicorn/error-message': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/new-for-builtins': 'error',
    'unicorn/no-abusive-eslint-disable': 'error',
    'unicorn/no-array-for-each': 'error',
    'unicorn/no-array-method-this-argument': 'error',
    'unicorn/no-array-push-push': 'error',
    'unicorn/no-await-expression-member': 'error',
    'unicorn/no-console-spaces': 'error',
    'unicorn/no-empty-file': 'error',
    'unicorn/no-hex-escape': 'error',
    'unicorn/no-instanceof-array': 'error',
    'unicorn/no-invalid-remove-event-listener': 'error',
    'unicorn/no-keyword-prefix': 'error',
    'unicorn/no-lonely-if': 'error',
    'unicorn/no-nested-ternary': 'error',
    'unicorn/no-new-array': 'error',
    'unicorn/no-new-buffer': 'error',
    'unicorn/no-unnecessary-await': 'error',
    'unicorn/no-useless-switch-case': 'error',
    'unicorn/number-literal-case': 'error',
    'unicorn/numeric-separators-style': 'error',
    'unicorn/prefer-keyboard-event-key': 'error',
    'unicorn/prefer-logical-operator-over-ternary': 'error',
    'unicorn/prefer-node-protocol': 'error',
    'unicorn/prefer-number-properties': 'error',
    'unicorn/prefer-regexp-test': 'error',
    'unicorn/prefer-spread': 'error',
    'unicorn/prefer-string-replace-all': 'error',
    'unicorn/prefer-string-slice': 'error',
    'unicorn/prefer-string-starts-ends-with': 'error',
    'unicorn/prefer-type-error': 'error',
    'unicorn/template-indent': 'error',
    'unicorn/throw-new-error': 'error',

    // node plugins
    'node/no-deprecated-api': 'error',
    'node/no-path-concat': 'error',
    'node/process-exit-as-throw': 'error',
  },
};
